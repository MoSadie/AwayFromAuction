buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

if (project.property("version").equals("unspecified"))
    version = 'v1.0.0'

group = 'io.github.mosadie.awayfromauction' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'awayfromauction-MC1.8.9'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"
    mappings = "stable_20"
}

configurations {
    shade
    compile.extendsFrom shade
}



repositories {
    maven {
        url "https://jitpack.io"
    }
    mavenCentral();
}

dependencies {
    //shade 'com.github.HypixelDev.PublicAPI:Java:6a518217c0' //TODO: Evetually set a version instead of a commit. 2.0.0 doesn't have skyblock features.
    shade 'com.github.MoSadie.PublicAPI:Java:3d31d1fdc1' //TODO: PR these changes back to HypixelDev/PublicAPI

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "awayfromauction",
            "Specification-Vendor": "MoSadie",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"MoSadie",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
